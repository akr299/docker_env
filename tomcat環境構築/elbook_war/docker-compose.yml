version: '3'

services: 
  app: 
    container_name: elbook_war
    image: tomcat:9.0.48-jdk11-openjdk-slim
    volumes:
      - ./elbook/webapps:/usr/local/tomcat/webapps
    ports:
      - "8043:8080"
    environment:
      TZ: Asia/Tokyo
      JAVA_OPT: >
        -classpath "/usr/local/tomcat/src"

      spring.datasource.url: "jdbc:mysql://db:3306/ELBOOK2022"
      spring.profiles.active: "docker"
    tty: true #コンテナが正常終了せず、起動したままになる  
    depends_on: #サービス間の依存関係を指定
      db:
        condition: service_started #db起動時に、appが起動する
    networks:
      - app-net
    # links:
    #   - db # service[mysql]のコンテナ間通信処理の許可

  db: #サービス名(mysql)
    container_name: mysql_8.0_war
    image: mysql:8.0
    volumes:
      - ./mysql/data:/var/lib/mysql
      # - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      # - ./mysql/mysql.cnf:/etc/mysql/conf.d/my.cnf
    ports: #ローカルでmysqld.exeが動いているため、ホスト側のポートを3307に変更
      - "33062:3306"
    environment: #作成するDB名,ルートユーザのパスワード,DBを操作するユーザ,タイムゾーン
      MYSQL_DATABASE: ELBOOK2022
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: todo_user
      MYSQL_PASSWORD: docker_ci
      TZ: Asia/Tokyo
    networks:
      - app-net
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --default-authentication-plugin=mysql_native_password

networks: #ネットワークを設定し、コンテナ間の通信を行う
  app-net: #ネットワーク名
    driver: bridge