{"version":3,"file":"module.js","mappings":"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","sources":["webpack:///../node_modules/@grafana/google-sdk/dist/index.production.js","webpack:///../node_modules/@grafana/google-sdk/index.js","webpack:///external amd \"@emotion/css\"","webpack:///external amd \"@grafana/data\"","webpack:///external amd \"@grafana/runtime\"","webpack:///external amd \"@grafana/ui\"","webpack:///external amd \"lodash\"","webpack:///external amd \"react\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./components/QueryEditor.tsx","webpack:///./types.ts","webpack:///./components/ConfigurationHelp.tsx","webpack:///../node_modules/@grafana/experimental/dist/esm/ConfigEditor/DataSourceDescription.js","webpack:///./components/Divider.tsx","webpack:///./components/MetaInspector.tsx","webpack:///./DataSource.ts","webpack:///./tracking.ts","webpack:///./module.ts","webpack:///./components/ConfigEditor.tsx","webpack:///./utils.ts"],"sourcesContent":["Object.defineProperty(exports,\"__esModule\",{value:!0});var e=require(\"@grafana/data\"),t=require(\"@grafana/ui\"),a=require(\"react\"),n=require(\"lodash\");function l(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var o=l(a);const i={JWT:\"jwt\",GCE:\"gce\"},r=\"Configuration help box\",s=\"Configuration drop zone\",c=\"Configuration text area\",u=\"Paste JWT button\",d=\"JWT form\",p=\"JWT button\",f=\"GCE button\",m=\"Private Key Path Input\",g=\"Private Key Input\",h=\"Fill JWT info manually\",y=\"Show private key path input\",E=\"Show private key input\",v=[\"private_key\",\"token_uri\",\"client_email\",\"project_id\"],T=({onChange:e,showConfigEditor:n})=>{const[l,i]=a.useState(),[r,d]=a.useState(null),p=t.useTheme2(),f=a.useCallback((e=>{i(null),d(!0)}),[d]),m=a.useCallback((e=>{d(null),i(null)}),[d]),g=a.useCallback((t=>{if(\"\"!==t.trim()){let a;try{a=JSON.parse(t)}catch(e){i(\"Invalid JWT token\")}const l=b(a);l.isValid?(n(),e({privateKey:a.private_key,tokenUri:a.token_uri,clientEmail:a.client_email,projectId:a.project_id})):i(l.error)}}),[i,e,n]);return o.default.createElement(o.default.Fragment,null,o.default.createElement(t.Field,{label:\"JWT token\",invalid:Boolean(l),description:r?\"Paste JWT token below\":\"Upload or paste Google JWT token\",error:l},o.default.createElement(o.default.Fragment,null,!0!==r&&o.default.createElement(\"div\",{\"data-testid\":s},t.FileDropzone&&o.default.createElement(t.FileDropzone,{options:{multiple:!1,accept:\".json\"},readAs:\"readAsText\",onLoad:e=>{g(e),d(!1)}},o.default.createElement(\"p\",{style:{margin:0,fontSize:`${p.typography.h4.fontSize}`,textAlign:\"center\"}},\"Drop the Google JWT file here\",o.default.createElement(\"br\",null),o.default.createElement(\"br\",null),o.default.createElement(t.Button,{fill:\"outline\"},\"Click to browse files\")))),r&&o.default.createElement(t.TextArea,{\"data-testid\":c,autoFocus:!0,invalid:Boolean(l),placeholder:\"Paste Google JWT token here\",onBlur:e=>g(e.currentTarget.value),rows:12}))),!r&&o.default.createElement(o.default.Fragment,null,o.default.createElement(t.Button,{\"data-testid\":u,type:\"button\",fill:\"outline\",style:{color:`${p.colors.primary.text}`},onClick:f},\"Paste JWT Token\"),o.default.createElement(\"span\",{style:{paddingRight:\"10px\",paddingLeft:\"10px\"}},\"or\"),o.default.createElement(t.Button,{\"data-testid\":h,type:\"button\",fill:\"outline\",style:{color:`${p.colors.primary.text}`},onClick:n},\"Fill In JWT Token manually\")),r&&l&&o.default.createElement(t.Field,null,o.default.createElement(t.Button,{type:\"button\",fill:\"outline\",style:{color:`${p.colors.primary.text}`},onClick:m},\"Upload JWT Token\")))},b=e=>{if(!n.isObject(e))return{isValid:!1,error:\"Invalid JWT token\"};const t=v.filter((t=>!e[t]));return t.length>0?{isValid:!1,error:`Missing keys: ${t.join(\", \")}`}:{isValid:!0}},{SecretFormField:j}=t.LegacyForms;var k;!function(e){e.PATH=\"path\",e.JWT=\"jwt\"}(k||(k={}));const J=({options:a,onReset:n,onOptionsChange:l})=>{var i;const[r,s]=o.default.useState((e=>\"privateKeyPath\"in e&&\"\"!==e.privateKeyPath?k.PATH:k.JWT)(a.jsonData)),c=t=>e.onUpdateDatasourceJsonDataOption({options:a,onOptionsChange:l},t),u=()=>{r===k.JWT?s(k.PATH):s(k.JWT)},p=o.default.createElement(\"span\",null,r===k.PATH?o.default.createElement(\"a\",{className:\"external-link\",onClick:u,\"data-testid\":E},\"Paste private key\"):\"Paste private key\",\" \",\"or  \",r===k.JWT?o.default.createElement(\"a\",{className:\"external-link\",onClick:u,\"data-testid\":y},\"provide path to private file\"):\"provide path to private key file\"),f={isConfigured:Boolean(a.secureJsonFields.privateKey),value:(null===(i=a.secureJsonData)||void 0===i?void 0:i.privateKey)||\"\",placeholder:\"Enter Private key\",onReset:()=>n(),onChange:e.onUpdateDatasourceSecureJsonDataOption({options:a,onOptionsChange:l},\"privateKey\"),\"data-testid\":g};return o.default.createElement(\"div\",{\"data-testid\":d},o.default.createElement(t.Field,{label:\"Project ID\"},o.default.createElement(t.Input,{id:\"defaultProject\",width:60,value:a.jsonData.defaultProject||\"\",onChange:c(\"defaultProject\")})),o.default.createElement(t.Field,{label:\"Client email\"},o.default.createElement(t.Input,{width:60,id:\"clientEmail\",value:a.jsonData.clientEmail||\"\",onChange:c(\"clientEmail\")})),o.default.createElement(t.Field,{label:\"Token URI\"},o.default.createElement(t.Input,{width:60,id:\"tokenUri\",value:a.jsonData.tokenUri||\"\",onChange:c(\"tokenUri\")})),r===k.PATH&&o.default.createElement(t.Field,{label:\"Private key path\",description:p},o.default.createElement(t.Input,{width:60,id:\"privateKeyPath\",value:a.jsonData.privateKeyPath||\"\",placeholder:\"File location of your private key (e.g. /etc/secrets/gce.pem)\",onChange:c(\"privateKeyPath\"),\"data-testid\":m})),r===k.JWT&&o.default.createElement(o.default.Fragment,null,t.SecretInput?o.default.createElement(t.Field,{label:\"Private key\",description:p},o.default.createElement(t.SecretInput,Object.assign({},f,{width:60}))):o.default.createElement(j,Object.assign({},f,{label:\"Private key\",labelWidth:10,inputWidth:20}))))};function C(n){const{options:l,onOptionsChange:r,authOptions:s}=n,{jsonData:c,secureJsonFields:u,secureJsonData:d}=l,p=()=>Boolean(c.clientEmail&&c.defaultProject&&c.tokenUri&&(u&&u.privateKey||c.privateKeyPath));c.authenticationType||(c.authenticationType=i.JWT);const[f,m]=a.useState(O(c.authenticationType)),[g,h]=a.useState(p());return o.default.createElement(o.default.Fragment,null,o.default.createElement(t.FieldSet,{label:\"Authentication\"},o.default.createElement(t.Field,{label:\"Authentication type\"},o.default.createElement(t.RadioButtonGroup,{options:s,value:c.authenticationType||i.JWT,onChange:e=>{h(p()),r(Object.assign(Object.assign({},l),{jsonData:Object.assign(Object.assign({},l.jsonData),{authenticationType:e})})),m(O(e))}}))),f&&o.default.createElement(t.FieldSet,{label:\"JWT Key Details\"},g?o.default.createElement(J,{options:l,onReset:()=>(e=>{const t=Object.assign({},d),a=e?Object.assign(Object.assign({},l.jsonData),e):Object.assign({},l.jsonData);delete a.clientEmail,delete a.defaultProject,delete a.tokenUri,delete a.privateKeyPath,delete t.privateKey,m(!0),h(!1),r(Object.assign(Object.assign({},l),{secureJsonFields:Object.assign(Object.assign({},l.secureJsonFields),{privateKey:!1}),secureJsonData:t,jsonData:a}))})(),onOptionsChange:r}):o.default.createElement(T,{showConfigEditor:()=>{h(!0)},onChange:e=>{r(Object.assign(Object.assign({},l),{secureJsonFields:Object.assign(Object.assign({},u),{privateKey:!0}),secureJsonData:Object.assign(Object.assign({},d),{privateKey:e.privateKey}),jsonData:Object.assign(Object.assign({},c),{clientEmail:e.clientEmail,defaultProject:e.projectId,tokenUri:e.tokenUri})}))}}),\" \"),c.authenticationType===i.GCE&&o.default.createElement(t.Field,{label:\"Default project\"},o.default.createElement(t.Input,{id:\"defaultProject\",width:60,value:l.jsonData.defaultProject||\"\",onChange:e.onUpdateDatasourceJsonDataOption(n,\"defaultProject\")})))}const O=e=>e===i.JWT||void 0===e,P=[{label:\"Google JWT File\",value:i.JWT,ariaLabel:p},{label:\"GCE Default Service Account\",value:i.GCE,ariaLabel:f}];exports.AuthConfig=C,exports.ConnectionConfig=e=>{const{options:{jsonData:a}}=e;a.authenticationType||(a.authenticationType=i.JWT);const n=a.authenticationType===i.JWT||void 0===a.authenticationType;return o.default.createElement(o.default.Fragment,null,o.default.createElement(C,Object.assign({authOptions:P},e)),o.default.createElement(\"div\",{className:\"grafana-info-box\",style:{marginTop:\"16px\"},\"data-testid\":r},o.default.createElement(\"p\",null,\"Don’t know how to get a service account key file or create a service account? Read more\",\" \",o.default.createElement(\"a\",{className:\"external-link\",target:\"_blank\",rel:\"noopener noreferrer\",href:\"https://grafana.com/docs/grafana/latest/datasources/google-cloud-monitoring/google-authentication/\"},\"in the documentation.\"))),!n&&o.default.createElement(t.Alert,{title:\"\",severity:\"info\"},\"Verify GCE default service account by clicking Save & Test\"))},exports.GOOGLE_AUTH_TYPE_OPTIONS=P,exports.GoogleAuthType=i,exports.JWTConfigEditor=T,exports.JWTForm=J;\n//# sourceMappingURL=index.production.js.map\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/index.production.js');\n} else {\n  module.exports = require('./dist/index.development.js');\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__644__;","module.exports = __WEBPACK_EXTERNAL_MODULE__305__;","module.exports = __WEBPACK_EXTERNAL_MODULE__545__;","module.exports = __WEBPACK_EXTERNAL_MODULE__388__;","module.exports = __WEBPACK_EXTERNAL_MODULE__980__;","module.exports = __WEBPACK_EXTERNAL_MODULE__650__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { QueryEditorProps } from '@grafana/data';\nimport { DataSourceOptions } from '@grafana/google-sdk';\nimport { InlineFieldRow, InlineFormLabel, InlineSwitch, Input, LinkButton, Segment, SegmentAsync } from '@grafana/ui';\nimport React, { ChangeEvent, PureComponent } from 'react';\nimport { DataSource } from '../DataSource';\nimport { SheetsQuery } from '../types';\nimport { reportInteraction } from '@grafana/runtime';\nimport { css } from '@emotion/css';\n\ntype Props = QueryEditorProps<DataSource, SheetsQuery, DataSourceOptions>;\n\nexport function getGoogleSheetRangeInfoFromURL(url: string): Partial<SheetsQuery> {\n  let idx = url?.indexOf('/d/');\n  if (!idx) {\n    // The original value\n    return { spreadsheet: url };\n  }\n\n  let id = url.substring(idx + 3);\n  idx = id.indexOf('/');\n  if (idx) {\n    id = id.substring(0, idx);\n  }\n\n  idx = url.indexOf('range=');\n  if (idx > 0) {\n    const sub = url.substring(idx + 'range='.length);\n    return { spreadsheet: id, range: sub };\n  }\n  return { spreadsheet: id };\n}\n\nexport function toGoogleURL(info: SheetsQuery): string {\n  let url = `https://docs.google.com/spreadsheets/d/${info.spreadsheet}/view`;\n  if (info.range) {\n    url += '#range=' + info.range;\n  }\n  return url;\n}\n\nconst defaultCacheDuration = 300;\n\nexport const formatCacheTimeLabel = (s: number = defaultCacheDuration) => {\n  if (s < 60) {\n    return s + 's';\n  } else if (s < 3600) {\n    return s / 60 + 'm';\n  }\n\n  return s / 3600 + 'h';\n};\n\nexport class QueryEditor extends PureComponent<Props> {\n  componentDidMount() {\n    if (!this.props.query.hasOwnProperty('cacheDurationSeconds')) {\n      this.props.query.cacheDurationSeconds = defaultCacheDuration; // um :(\n    }\n  }\n\n  onRangeChange = (event: ChangeEvent<HTMLInputElement>) => {\n    this.props.onChange({\n      ...this.props.query,\n      range: event.target.value,\n    });\n  };\n\n  onSpreadsheetIDChange = (item: any) => {\n    const { query, onRunQuery, onChange } = this.props;\n\n    if (!item.value) {\n      return; // ignore delete?\n    }\n\n    const v = item.value;\n    // Check for pasted full URLs\n    if (/(.*)\\/spreadsheets\\/d\\/(.*)/.test(v)) {\n      onChange({ ...query, ...getGoogleSheetRangeInfoFromURL(v) });\n    } else {\n      onChange({ ...query, spreadsheet: v });\n    }\n    onRunQuery();\n  };\n\n  toggleUseTimeFilter = (event?: React.SyntheticEvent<HTMLInputElement>) => {\n    const { query, onChange, onRunQuery } = this.props;\n\n    reportInteraction('grafana_google_sheets_time_filter_toggled', {\n      checked: !query.useTimeFilter,\n    });\n\n    onChange({\n      ...query,\n      useTimeFilter: !query.useTimeFilter,\n    });\n    onRunQuery();\n  };\n\n  render() {\n    const { query, onRunQuery, onChange, datasource } = this.props;\n    const styles = getStyles();\n\n    return (\n      <>\n        <InlineFieldRow className={styles.rowSpacing}>\n          <InlineFormLabel\n            width={10}\n            className=\"query-keyword\"\n            tooltip={\n              <p>\n                The <code>spreadsheetId</code> is used to identify which spreadsheet is to be accessed or altered. This\n                ID is the value between the &quot/d/&quot and the &quot/edit&quot in the URL of your spreadsheet.\n              </p>\n            }\n          >\n            Spreadsheet ID\n          </InlineFormLabel>\n          <SegmentAsync\n            loadOptions={() => datasource.getSpreadSheets()}\n            placeholder=\"Enter SpreadsheetID\"\n            value={query.spreadsheet}\n            allowCustomValue={true}\n            onChange={this.onSpreadsheetIDChange}\n          />\n          {query.spreadsheet && (\n            <LinkButton\n              style={{ marginTop: 1 }}\n              fill=\"text\"\n              icon=\"link\"\n              href={toGoogleURL(query)}\n              target=\"_blank\"\n              onClick={() => reportInteraction('grafana_google_sheets_document_opened', {})}\n            />\n          )}\n          <QueryRowTerminator />\n        </InlineFieldRow>\n\n        <InlineFieldRow className={styles.rowSpacing}>\n          <InlineFormLabel\n            width={10}\n            className=\"query-keyword\"\n            tooltip={\n              <p>\n                A string like <code>Sheet1!A1:B2</code>, that refers to a group of cells in the spreadsheet, and is\n                typically used in formulas. Named ranges are also supported. When a named range conflicts with a\n                sheet&rsquo;s name, the named range is preferred.\n              </p>\n            }\n          >\n            Range\n          </InlineFormLabel>\n          <Input\n            width={30}\n            value={query.range || ''}\n            onChange={this.onRangeChange}\n            onBlur={onRunQuery}\n            placeholder=\"Class Data!A2:E\"\n            className={styles.marginRight}\n          />\n\n          <QueryRowTerminator />\n        </InlineFieldRow>\n\n        <InlineFieldRow className={styles.rowSpacing}>\n          <InlineFormLabel\n            width={10}\n            className=\"query-keyword\"\n            tooltip=\"Time in seconds that the spreadsheet will be cached in Grafana after receiving a response from the spreadsheet API\"\n          >\n            Cache Time\n          </InlineFormLabel>\n          <Segment\n            value={{ label: formatCacheTimeLabel(query.cacheDurationSeconds), value: query.cacheDurationSeconds }}\n            options={[0, 5, 10, 30, 60, 60 * 2, 60 * 5, 60 * 10, 60 * 30, 3600, 3600 * 2, 3600 * 5].map((value) => ({\n              label: formatCacheTimeLabel(value),\n              value,\n              description: value ? '' : 'Response is not cached at all',\n            }))}\n            onChange={({ value }) => {\n              reportInteraction('grafana_google_sheets_cache_updated', {\n                secondsValue: value,\n              });\n\n              onChange({ ...query, cacheDurationSeconds: value! });\n            }}\n          />\n          <QueryRowTerminator />\n        </InlineFieldRow>\n\n        <InlineFieldRow className={styles.rowSpacing}>\n          <InlineFormLabel\n            width={10}\n            className=\"query-keyword\"\n            tooltip=\"Apply the dashboard time range to the first time fieldAPI\"\n          >\n            Use Time Filter\n          </InlineFormLabel>\n          <InlineSwitch\n            className={styles.marginRight}\n            value={query.useTimeFilter === true}\n            onChange={this.toggleUseTimeFilter}\n          />\n          <QueryRowTerminator />\n        </InlineFieldRow>\n      </>\n    );\n  }\n}\n\nconst QueryRowTerminator = () => {\n  const styles = getStyles();\n\n  return (\n    <InlineFormLabel className={styles.rowTerminator}>\n      <></>\n    </InlineFormLabel>\n  );\n};\n\nconst getStyles = () => {\n  return {\n    rowSpacing: css({\n      marginBottom: '4px',\n    }),\n    rowTerminator: css({\n      flexGrow: 1,\n    }),\n    marginRight: css({\n      marginRight: '4px',\n    }),\n  };\n};\n","import { DataQuery } from '@grafana/schema';\nimport { GoogleAuthType, GOOGLE_AUTH_TYPE_OPTIONS, DataSourceSecureJsonData } from '@grafana/google-sdk';\n\nexport const GoogleSheetsAuth = {\n  ...GoogleAuthType,\n  API: 'key',\n} as const;\n\nexport const googleSheetsAuthTypes = [{ label: 'API Key', value: GoogleSheetsAuth.API }, ...GOOGLE_AUTH_TYPE_OPTIONS];\n\nexport interface GoogleSheetsSecureJSONData extends DataSourceSecureJsonData {\n  apiKey?: string;\n}\n\nexport interface CacheInfo {\n  hit: boolean;\n  count: number;\n  expires: string;\n}\n\nexport interface SheetResponseMeta {\n  spreadsheetId: string;\n  range: string;\n  majorDimension: string;\n  cache: CacheInfo;\n  warnings: string[];\n}\n\n//-------------------------------------------------------------------------------\n// The Sheets specific types\n//-------------------------------------------------------------------------------\n\nexport interface SheetsQuery extends DataQuery {\n  spreadsheet: string;\n  range?: string;\n  cacheDurationSeconds?: number;\n  useTimeFilter?: boolean;\n}\n","import React, { useState } from 'react';\nimport { Collapse, useTheme2 } from '@grafana/ui';\nimport { GoogleSheetsAuth } from '../types';\n\ninterface Props {\n  authenticationType: string;\n}\n\nexport const ConfigurationHelp = ({ authenticationType }: Props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const theme = useTheme2();\n\n  const renderHelpBody = () => {\n    switch (authenticationType) {\n      case GoogleSheetsAuth.API:\n        return (\n          <>\n            <h4>Generate an API key</h4>\n            <ol style={{ listStylePosition: 'inside' }}>\n              <li>\n                Open the{' '}\n                <a\n                  href=\"https://console.developers.google.com/apis/credentials\"\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                  style={{ color: theme.colors.text.link }}\n                >\n                  Credentials page\n                </a>{' '}\n                in the Google API Console.\n              </li>\n              <li>\n                Click <strong>Create Credentials</strong> and then click <strong>API key</strong>.\n              </li>\n              <li>\n                Copy the key and paste it in the API Key field above. The file contents are encrypted and saved in the\n                Grafana database.\n              </li>\n            </ol>\n          </>\n        );\n      case GoogleSheetsAuth.GCE:\n        return (\n          <>\n            <p>\n              When Grafana is running on a Google Compute Engine (GCE) virtual machine, Grafana can automatically\n              retrieve default credentials from the metadata server. As a result, there is no need to generate a private\n              key file for the service account. You also do not need to upload the file to Grafana. The following\n              preconditions must be met before Grafana can retrieve default credentials.\n            </p>\n\n            <ol style={{ listStylePosition: 'inside', marginBottom: theme.spacing() }}>\n              <li>\n                You must create a Service Account for use by the GCE virtual machine. For more information, refer to{' '}\n                <a\n                  href=\"https://cloud.google.com/compute/docs/access/create-enable-service-accounts-for-instances#createanewserviceaccount\"\n                  target=\"_blank\"\n                  style={{ color: theme.colors.text.link }}\n                  rel=\"noreferrer noopener\"\n                >\n                  Create new service account\n                </a>\n                .\n              </li>\n              <li>\n                Verify that the GCE virtual machine instance is running as the service account that you created. For\n                more information, refer to{' '}\n                <a\n                  href=\"https://cloud.google.com/compute/docs/access/create-enable-service-accounts-for-instances#using\"\n                  target=\"_blank\"\n                  style={{ color: theme.colors.text.link }}\n                  rel=\"noreferrer noopener\"\n                >\n                  setting up an instance to run as a service account\n                </a>\n                .\n              </li>\n              <li>Allow access to the specified API scope.</li>\n            </ol>\n\n            <p>\n              For more information about creating and enabling service accounts for GCE instances, refer to{' '}\n              <a\n                href=\"https://cloud.google.com/compute/docs/access/create-enable-service-accounts-for-instances\"\n                target=\"_blank\"\n                style={{ color: theme.colors.text.link }}\n                rel=\"noreferrer noopener\"\n              >\n                enabling service accounts for instances in Google documentation\n              </a>\n              .\n            </p>\n          </>\n        );\n      default:\n        // Default is JWT\n        return (\n          <>\n            <h4>Generate a JWT file</h4>\n            <ol style={{ listStylePosition: 'inside', marginBottom: theme.spacing() }}>\n              <li>\n                Open the{' '}\n                <a\n                  href=\"https://console.developers.google.com/apis/credentials\"\n                  target=\"_blank\"\n                  style={{ color: theme.colors.text.link }}\n                  rel=\"noreferrer noopener\"\n                >\n                  Credentials\n                </a>{' '}\n                page in the Google API Console.\n              </li>\n              <li>\n                Click <strong>Create Credentials</strong> then click <strong>Service account</strong>.\n              </li>\n              <li>On the Create service account page, enter the Service account details.</li>\n              <li>\n                On the <code>Create service account</code> page, fill in the <code>Service account details</code> and\n                then click <code>Create</code>\n              </li>\n              <li>\n                On the <code>Service account permissions</code> page, don&rsquo;t add a role to the service account.\n                Just click <code>Continue</code>\n              </li>\n              <li>\n                In the next step, click <code>Create Key</code>. Choose key type <code>JSON</code> and click{' '}\n                <code>Create</code>. A JSON key file will be created and downloaded to your computer\n              </li>\n              <li>\n                Open the{' '}\n                <a\n                  href=\"https://console.cloud.google.com/apis/library/sheets.googleapis.com?q=sheet\"\n                  target=\"_blank\"\n                  style={{ color: theme.colors.text.link }}\n                  rel=\"noreferrer noopener\"\n                >\n                  Google Sheets\n                </a>{' '}\n                in API Library and enable access for your account\n              </li>\n              <li>\n                Open the{' '}\n                <a\n                  href=\"https://console.cloud.google.com/apis/library/drive.googleapis.com?q=drive\"\n                  target=\"_blank\"\n                  style={{ color: theme.colors.text.link }}\n                  rel=\"noreferrer noopener\"\n                >\n                  Google Drive\n                </a>{' '}\n                in API Library and enable access for your account. Access to the Google Drive API is used to list all\n                spreadsheets that you have access to.\n              </li>\n              <li>\n                Share any private files/folders you want to access with the service account&apos;s email address. The\n                email is specified as <code>client_email</code> in the Google JWT File.\n              </li>\n              <li>\n                Drag the file to the dotted zone above. Then click <code>Save & Test</code>. The file contents will be\n                encrypted and saved in the Grafana database.\n              </li>\n            </ol>\n          </>\n        );\n    }\n  };\n  return (\n    <Collapse\n      collapsible\n      label=\"Configure Google Sheets Authentication\"\n      isOpen={isOpen}\n      onToggle={() => setIsOpen((x) => !x)}\n    >\n      {renderHelpBody()}\n    </Collapse>\n  );\n};\n","import React__default from 'react';\nimport { css, cx } from '@emotion/css';\nimport { useTheme2 } from '@grafana/ui';\n\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nconst DataSourceDescription = ({ dataSourceName, docsLink, hasRequiredFields = true, className }) => {\n  const theme = useTheme2();\n  const styles = {\n    container: css({\n      p: {\n        margin: 0\n      },\n      \"p + p\": {\n        marginTop: theme.spacing(2)\n      }\n    }),\n    text: css(__spreadProps(__spreadValues({}, theme.typography.body), {\n      color: theme.colors.text.secondary,\n      a: css({\n        color: theme.colors.text.link,\n        textDecoration: \"underline\",\n        \"&:hover\": {\n          textDecoration: \"none\"\n        }\n      })\n    }))\n  };\n  return /* @__PURE__ */ React__default.createElement(\"div\", { className: cx(styles.container, className) }, /* @__PURE__ */ React__default.createElement(\"p\", { className: styles.text }, \"Before you can use the \", dataSourceName, \" data source, you must configure it below or in the config file. For detailed instructions,\", \" \", /* @__PURE__ */ React__default.createElement(\"a\", { href: docsLink, target: \"_blank\", rel: \"noreferrer\" }, \"view the documentation\"), \".\"), hasRequiredFields && /* @__PURE__ */ React__default.createElement(\"p\", { className: styles.text }, /* @__PURE__ */ React__default.createElement(\"i\", null, \"Fields marked with * are required\")));\n};\n\nexport { DataSourceDescription };\n//# sourceMappingURL=DataSourceDescription.js.map\n","import { css } from '@emotion/css';\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\nimport React from 'react';\n\n// this custom component is necessary because the Grafana UI <Divider /> component is not backwards compatible with Grafana < 10.1.0\nexport const Divider = () => {\n  const styles = useStyles2(getStyles);\n  return <hr className={styles.horizontalDivider} />;\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    horizontalDivider: css({\n      borderTop: `1px solid ${theme.colors.border.weak}`,\n      margin: theme.spacing(2, 0),\n      width: '100%',\n    }),\n  };\n};\n","import { DataFrame, MetadataInspectorProps } from '@grafana/data';\nimport { DataSourceOptions } from '@grafana/google-sdk';\nimport React, { PureComponent } from 'react';\nimport { DataSource } from '../DataSource';\nimport { SheetResponseMeta, SheetsQuery } from '../types';\n\nexport type Props = MetadataInspectorProps<DataSource, SheetsQuery, DataSourceOptions>;\n\nexport class MetaInspector extends PureComponent<Props> {\n  state = { index: 0 };\n\n  renderInfo = (frame: DataFrame) => {\n    const meta = frame.meta?.custom as SheetResponseMeta;\n    if (!meta) {\n      return null;\n    }\n\n    return (\n      <div>\n        <h3>Info</h3>\n        <pre>{JSON.stringify(meta, null, 2)}</pre>\n      </div>\n    );\n  };\n\n  render() {\n    const { data } = this.props;\n    if (!data || !data.length) {\n      return <div>No Data</div>;\n    }\n    return (\n      <div>\n        <h3>Google Sheets Metadata</h3>\n        {data.map((frame) => {\n          return this.renderInfo(frame);\n        })}\n      </div>\n    );\n  }\n}\n","import {\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceInstanceSettings,\n  ScopedVars,\n  SelectableValue,\n} from '@grafana/data';\nimport { DataSourceOptions } from '@grafana/google-sdk';\nimport { DataSourceWithBackend, getTemplateSrv } from '@grafana/runtime';\nimport { SheetsQuery } from './types';\nimport { Observable } from 'rxjs';\nimport { trackRequest } from 'tracking';\n\nexport class DataSource extends DataSourceWithBackend<SheetsQuery, DataSourceOptions> {\n  authType: string;\n  constructor(instanceSettings: DataSourceInstanceSettings<DataSourceOptions>) {\n    super(instanceSettings);\n    this.authType = instanceSettings.jsonData.authenticationType;\n  }\n\n  query(request: DataQueryRequest<SheetsQuery>): Observable<DataQueryResponse> {\n    trackRequest(request);\n    return super.query(request);\n  }\n\n  // Enables default annotation support for 7.2+\n  annotations = {};\n\n  // Support template variables for spreadsheet and range\n  applyTemplateVariables(query: SheetsQuery, scopedVars: ScopedVars) {\n    const templateSrv = getTemplateSrv();\n    return {\n      ...query,\n      spreadsheet: templateSrv.replace(query.spreadsheet, scopedVars),\n      range: query.range ? templateSrv.replace(query.range, scopedVars) : '',\n    };\n  }\n\n  async getSpreadSheets(): Promise<Array<SelectableValue<string>>> {\n    return this.getResource('spreadsheets').then(({ spreadsheets }) =>\n      spreadsheets\n        ? Object.entries(spreadsheets).map(([value, label]) => ({ label, value }) as SelectableValue<string>)\n        : []\n    );\n  }\n}\n","import { CoreApp, DataQueryRequest } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { SheetsQuery } from 'types';\n\nexport const trackRequest = (request: DataQueryRequest<SheetsQuery>) => {\n  if (request.app === CoreApp.Dashboard || request.app === CoreApp.PanelViewer) {\n    return;\n  }\n\n  request.targets.forEach((target) => {\n    reportInteraction('grafana_google_sheets_query_executed', {\n      app: request.app,\n      useTimeFilter: target.useTimeFilter ?? false,\n      cacheDurationSeconds: target.cacheDurationSeconds ?? 0,\n    });\n  });\n};\n","import { DataSourcePlugin } from '@grafana/data';\nimport { DataSourceOptions } from '@grafana/google-sdk';\nimport { ConfigEditor, MetaInspector, QueryEditor } from './components';\nimport { DataSource } from './DataSource';\nimport { SheetsQuery } from './types';\n\nexport const plugin = new DataSourcePlugin<DataSource, SheetsQuery, DataSourceOptions>(DataSource)\n  .setConfigEditor(ConfigEditor)\n  .setQueryEditor(QueryEditor)\n  .setMetadataInspector(MetaInspector);\n","import { DataSourcePluginOptionsEditorProps, onUpdateDatasourceSecureJsonDataOption } from '@grafana/data';\nimport { AuthConfig, DataSourceOptions } from '@grafana/google-sdk';\nimport { Field, SecretInput } from '@grafana/ui';\nimport React from 'react';\nimport { GoogleSheetsAuth, GoogleSheetsSecureJSONData, googleSheetsAuthTypes } from '../types';\nimport { getBackwardCompatibleOptions } from '../utils';\nimport { ConfigurationHelp } from './ConfigurationHelp';\nimport { DataSourceDescription } from '@grafana/experimental';\nimport { Divider } from './Divider';\n\nexport type Props = DataSourcePluginOptionsEditorProps<DataSourceOptions, GoogleSheetsSecureJSONData>;\n\nexport function ConfigEditor(props: Props) {\n  const options = getBackwardCompatibleOptions(props.options);\n\n  const apiKeyProps = {\n    isConfigured: Boolean(options.secureJsonFields.apiKey),\n    value: options.secureJsonData?.apiKey || '',\n    placeholder: 'Enter API key',\n    id: 'apiKey',\n    onReset: () =>\n      props.onOptionsChange({\n        ...options,\n        secureJsonFields: { ...options.secureJsonFields, apiKey: false },\n        secureJsonData: { apiKey: '' },\n        jsonData: options.jsonData,\n      }),\n    onChange: onUpdateDatasourceSecureJsonDataOption(props, 'apiKey'),\n  };\n\n  return (\n    <>\n      <DataSourceDescription\n        dataSourceName=\"Google Sheets\"\n        docsLink=\"https://grafana.com/grafana/plugins/grafana-googlesheets-datasource/\"\n        hasRequiredFields={false}\n      />\n\n      <Divider />\n\n      <ConfigurationHelp authenticationType={options.jsonData.authenticationType} />\n\n      <Divider />\n\n      <AuthConfig authOptions={googleSheetsAuthTypes} onOptionsChange={props.onOptionsChange} options={options} />\n\n      {options.jsonData.authenticationType === GoogleSheetsAuth.API && (\n        <Field label=\"API Key\">\n          <SecretInput {...apiKeyProps} label=\"API key\" width={40} />\n        </Field>\n      )}\n    </>\n  );\n}\n","import { GoogleSheetsAuth } from './types';\nimport { Props } from './components/ConfigEditor';\n\nexport function getBackwardCompatibleOptions(options: Props['options']): Props['options'] {\n  const changedOptions = {\n    ...options,\n    jsonData: { ...options.jsonData },\n    secureJsonFields: { ...options.secureJsonFields },\n  };\n  // Make sure we support the old authType property\n  changedOptions.jsonData.authenticationType = options.jsonData.authenticationType || options.jsonData.authType!;\n\n  // Show a configured message for the JWT fields when JWT is set in secureJsonFields\n  if (changedOptions.jsonData.authenticationType === GoogleSheetsAuth.JWT && options.secureJsonFields?.jwt) {\n    changedOptions.jsonData.clientEmail = 'configured';\n    changedOptions.jsonData.defaultProject = 'configured';\n    changedOptions.jsonData.tokenUri = 'configured';\n    changedOptions.secureJsonFields.privateKey = true;\n  }\n\n  return changedOptions;\n}\n"],"names":["e","t","a","n","o","default","l","i","JWT","GCE","v","T","onChange","showConfigEditor","useState","r","d","p","useTheme2","f","useCallback","m","g","trim","JSON","parse","b","isValid","privateKey","private_key","tokenUri","token_uri","clientEmail","client_email","projectId","project_id","error","createElement","Fragment","Field","label","invalid","Boolean","description","FileDropzone","options","multiple","accept","readAs","onLoad","style","margin","fontSize","typography","h4","textAlign","Button","fill","TextArea","autoFocus","placeholder","onBlur","currentTarget","value","rows","type","color","colors","primary","text","onClick","paddingRight","paddingLeft","isObject","filter","length","join","SecretFormField","j","LegacyForms","k","PATH","J","onReset","onOptionsChange","s","privateKeyPath","jsonData","c","onUpdateDatasourceJsonDataOption","u","className","isConfigured","secureJsonFields","secureJsonData","onUpdateDatasourceSecureJsonDataOption","Input","id","width","defaultProject","SecretInput","Object","assign","labelWidth","inputWidth","O","P","ariaLabel","exports","AuthConfig","authOptions","authenticationType","h","FieldSet","RadioButtonGroup","GOOGLE_AUTH_TYPE_OPTIONS","GoogleAuthType","module","__WEBPACK_EXTERNAL_MODULE__644__","__WEBPACK_EXTERNAL_MODULE__305__","__WEBPACK_EXTERNAL_MODULE__545__","__WEBPACK_EXTERNAL_MODULE__388__","__WEBPACK_EXTERNAL_MODULE__980__","__WEBPACK_EXTERNAL_MODULE__650__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","getter","__esModule","definition","key","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","toGoogleURL","info","url","spreadsheet","range","formatCacheTimeLabel","QueryEditor","PureComponent","componentDidMount","this","props","query","cacheDurationSeconds","render","onRunQuery","datasource","styles","getStyles","InlineFieldRow","rowSpacing","InlineFormLabel","tooltip","code","SegmentAsync","loadOptions","getSpreadSheets","allowCustomValue","onSpreadsheetIDChange","LinkButton","marginTop","icon","href","target","reportInteraction","QueryRowTerminator","onRangeChange","marginRight","Segment","map","secondsValue","InlineSwitch","useTimeFilter","toggleUseTimeFilter","event","item","test","idx","indexOf","substring","getGoogleSheetRangeInfoFromURL","checked","rowTerminator","css","marginBottom","flexGrow","GoogleSheetsAuth","API","googleSheetsAuthTypes","ConfigurationHelp","isOpen","setIsOpen","theme","Collapse","collapsible","onToggle","x","ol","listStylePosition","li","rel","link","strong","spacing","renderHelpBody","__defProp","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","__propIsEnum","propertyIsEnumerable","__defNormalProp","configurable","writable","__spreadValues","DataSourceDescription","dataSourceName","docsLink","hasRequiredFields","container","body","secondary","textDecoration","cx","Divider","useStyles2","hr","horizontalDivider","borderTop","border","weak","MetaInspector","data","div","h3","frame","renderInfo","state","index","meta","custom","pre","stringify","DataSource","DataSourceWithBackend","request","app","CoreApp","targets","forEach","trackRequest","super","applyTemplateVariables","scopedVars","templateSrv","getTemplateSrv","replace","getResource","then","spreadsheets","entries","constructor","instanceSettings","annotations","authType","plugin","DataSourcePlugin","setConfigEditor","changedOptions","jwt","getBackwardCompatibleOptions","apiKeyProps","apiKey","setQueryEditor","setMetadataInspector"],"sourceRoot":""}